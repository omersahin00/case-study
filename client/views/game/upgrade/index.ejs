<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Items</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .game-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
            padding: 30px;
            width: 300px;
            text-align: center;
            backdrop-filter: blur(20px);
            border: 2px solid rgba(255, 255, 255, 0.3);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .game-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
        }

        .level-image {
            width: 120px;
            height: 120px;
            border-radius: 15px;
            margin: 0 auto 20px;
            border: 4px solid #667eea;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
            object-fit: cover;
            display: block;
        }

        .level-image:hover {
            transform: scale(1.05);
        }

        .level-title {
            font-size: 24px;
            font-weight: bold;
            color: #333;
            margin-bottom: 15px;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .level-bar-container {
            background: #e0e0e0;
            border-radius: 15px;
            height: 20px;
            margin: 20px 0;
            overflow: hidden;
            box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
            position: relative;
        }

        .level-bar {
            background: linear-gradient(90deg, #4CAF50, #8BC34A);
            height: 100%;
            border-radius: 15px;
            transition: width 0.5s ease;
            position: relative;
            overflow: hidden;
        }

        .level-bar::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            animation: shimmer 2s infinite;
        }

        @keyframes shimmer {
            0% { left: -100%; }
            100% { left: 100%; }
        }

        .level-text {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
            font-weight: 500;
        }

        .upgrade-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 25px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
            position: relative;
            overflow: hidden;
            margin-top: 20px;
            width: 100%;
        }

        .upgrade-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .upgrade-btn:hover::before {
            left: 100%;
        }

        .upgrade-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }

        .upgrade-btn:active {
            transform: translateY(0);
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }

        .upgrade-btn:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .upgrade-btn:disabled::before {
            display: none;
        }

        .stats-container {
            display: flex;
            justify-content: space-between;
            margin: 15px 0;
            padding: 10px;
            background: rgba(102, 126, 234, 0.1);
            border-radius: 10px;
        }

        .stat-item {
            text-align: center;
        }

        .stat-value {
            font-size: 18px;
            font-weight: bold;
            color: #667eea;
        }

        .stat-label {
            font-size: 12px;
            color: #666;
            margin-top: 2px;
        }

        .loading {
            position: relative;
        }

        .loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: translate(-50%, -50%) rotate(0deg); }
            100% { transform: translate(-50%, -50%) rotate(360deg); }
        }

        .success-message, .error-message {
            padding: 10px;
            border-radius: 8px;
            margin: 10px 0;
            font-size: 14px;
            font-weight: 500;
        }

        .success-message {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .error-message {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        @media (max-width: 480px) {
            .game-card {
                width: 280px;
                padding: 20px;
            }
            
            .level-image {
                width: 100px;
                height: 100px;
            }
            
            .level-title {
                font-size: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="game-card">
        <!-- Level fotoÄŸrafÄ± (controller'dan gelecek level bilgisine gÃ¶re) -->
        <img src="/img/level<%= level || 1 %>.png" 
             alt="Level <%= level || 1 %>" 
             class="level-image"
             onerror="this.src='/img/level1.png'">
        
        <!-- Level baÅŸlÄ±ÄŸÄ± -->
        <h2 class="level-title">Level <%= level || 1 %></h2>
        
        <!-- Ä°statistikler -->
        <div class="stats-container">
            <div class="stat-item">
                <div class="stat-value"><%= level || 1 %></div>
                <div class="stat-label">Seviye</div>
            </div>
            <div class="stat-item">
                <div class="stat-value"><%= experience || 0 %></div>
                <div class="stat-label">XP</div>
            </div>
            <div class="stat-item">
                <div class="stat-value"><%= nextLevelXP || 100 %></div>
                <div class="stat-label">Hedef XP</div>
            </div>
        </div>
        
        <!-- Level barÄ± -->
        <div class="level-bar-container">
            <div class="level-bar" data-progress="<%= experience || 0 %>" data-max="<%= nextLevelXP || 100 %>"></div>
        </div>
        <div class="level-text">
            XP: <%= experience || 0 %>/<%= nextLevelXP || 100 %>
        </div>
        
        <!-- Mesaj alanÄ± -->
        <div id="messageArea"></div>
        
        <!-- Upgrade butonu -->
        <form id="upgradeForm">
            <input type="hidden" name="itemId" value="<%= itemId || 'default_item' %>">
            <button type="submit" class="upgrade-btn" id="upgradeBtn">
                ðŸš€ Level Up!
            </button>
        </form>
    </div>

    <script>
        document.getElementById('upgradeForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const btn = document.getElementById('upgradeBtn');
            const messageArea = document.getElementById('messageArea');
            const formData = new FormData(this);
            
            // Butonu disable et ve loading gÃ¶ster
            btn.disabled = true;
            btn.classList.add('loading');
            btn.textContent = '';
            messageArea.innerHTML = '';
            
            try {
                const response = await fetch(window.location.href, {
                    method: 'POST',
                    body: formData
                });
                
                if (response.redirected) {
                    // Redirect varsa sayfayÄ± yenile
                    window.location.reload();
                } else {
                    const result = await response.json();
                    
                    if (response.ok && result.success) {
                        messageArea.innerHTML = `<div class="success-message">${result.message || 'Level baÅŸarÄ±yla yÃ¼kseltildi!'}</div>`;
                        
                        // SayfayÄ± yenile
                        setTimeout(() => {
                            window.location.reload();
                        }, 1500);
                    } else {
                        messageArea.innerHTML = `<div class="error-message">${result.message || 'Level yÃ¼kseltme baÅŸarÄ±sÄ±z!'}</div>`;
                    }
                }
            } catch (error) {
                messageArea.innerHTML = `<div class="error-message">Bir hata oluÅŸtu: ${error.message}</div>`;
            } finally {
                // Butonu tekrar aktif et
                btn.disabled = false;
                btn.classList.remove('loading');
                btn.textContent = 'ðŸš€ Level Up!';
            }
        });
        
        // Sayfa yÃ¼klendiÄŸinde animasyonlarÄ± baÅŸlat
        document.addEventListener('DOMContentLoaded', function() {
            const card = document.querySelector('.game-card');
            const levelBar = document.querySelector('.level-bar');
            
            card.style.opacity = '0';
            card.style.transform = 'translateY(50px)';
            
            // Progress bar'Ä± ayarla
            const currentXP = parseInt(levelBar.dataset.progress) || 0;
            const maxXP = parseInt(levelBar.dataset.max) || 100;
            const progressPercent = Math.min((currentXP / maxXP) * 100, 100);
            levelBar.style.width = progressPercent + '%';
            
            setTimeout(() => {
                card.style.transition = 'all 0.8s ease';
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
            }, 100);
        });
    </script>
</body>
</html>
